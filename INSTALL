SUPPORTED PLATFORMS
===================

Piqi is written in OCaml language so in theory it should work on platforms and
hardware architectures supported by OCaml. See the page below for the list of
supported platforms:

        http://caml.inria.fr/ocaml/portability.en.html


So far, Piqi has been tested only on Debian Linux (Lenny and Squeeze, i386 and
amd64 architectures).

Current build procedure is likely not going to work on Windows out of the box,
but it shouldn't be hard to adapt it.


PREREQUISITES
=============

* OCaml compiler and standard library

        Recommended (tested) versions are 3.11.2 and 3.12.0. Older OCaml
        versions >= 3.10 should work as well.

        OCaml is available in most Linux distributions. It can also be
        downloaded from here:

                http://caml.inria.fr/download.en.html


* CamlP4 -- Caml Preprocessor and Pretty Printer

        It comes as a part of OCaml source distribution. It should be
        prepackaged in major Linux distributions as well.


* Ocamlfind/Findlib -- library manager for OCaml

        If installed separately form prepackaged OCaml distribution, it is
        recommended to build it from sources after you build/install OCaml. It
        can be downloaded from here:

                http://projects.camlcity.org/projects/findlib.html

* C compiler
        
        GCC works. Other compilers should work if they are able to build OCaml.


* GNU make, m4, sed and probably some other tools.


On Debian Squeeze, the above dependencies can be installed using the following
command:

        apt-get install ocaml camlp4-extra ocaml-findlib gcc m4 make sed


INSTALLATION INSTRUCTIONS
=========================

NOTE: these instruction are applicable only to Unix/Linux systems.


1. Edit setenv.sh file to set build configuration variables if necessary.

2. Apply build configuration by running
        
        . setenv.sh

        or 

        source setenv.sh

3. Make sure that "ocamlfind" program is in PATH

4. Build third-party components
        
        cd deps
        make 
        cd ..

5. Build Piqi

        make

6. Install "piqi" and "piqic" binaries (optional) 

        make install


The following step is necessary only is you are going to use Piqi as a data
serialization system for OCaml.

7. Install Piqi runtime library for OCaml and Piqi camlp4 extensions

        make ocaml-install


The following step is necessary only is you are going to use Piqi as a data
serialization system for Erlang.


8. Build Piqi runtime library for Erlang

        make erlang

        Note that there is no support for installing the library, but binary
        build as well as sources are located in "piqirun-erlang" directory which
        has an OTP-compliant structure.


RUNNING TESTS
=============

See tests/README for instructions.

